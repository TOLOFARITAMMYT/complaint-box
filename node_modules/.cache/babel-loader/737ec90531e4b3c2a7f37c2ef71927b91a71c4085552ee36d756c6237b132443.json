{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TechnovilleHQ02\\\\Desktop\\\\complaint box\\\\src\\\\pages\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would typically validate credentials against your backend\n    // For demo purposes, we'll use a simple check\n    if (credentials.username === 'admin' && credentials.password === 'admin123') {\n      // Store admin status in localStorage\n      localStorage.setItem('isAdmin', 'true');\n      navigate('/admin/dashboard');\n    } else {\n      setError('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            className: \"form-input\",\n            value: credentials.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"form-input\",\n            value: credentials.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            marginTop: '1rem',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"NbDnZ9T7f4roQUnRcZAf4kcQLLk=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","credentials","setCredentials","username","password","error","setError","navigate","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","style","color","marginTop","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/TechnovilleHQ02/Desktop/complaint box/src/pages/AdminLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AdminLogin = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you would typically validate credentials against your backend\r\n    // For demo purposes, we'll use a simple check\r\n    if (credentials.username === 'admin' && credentials.password === 'admin123') {\r\n      // Store admin status in localStorage\r\n      localStorage.setItem('isAdmin', 'true');\r\n      navigate('/admin/dashboard');\r\n    } else {\r\n      setError('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"form-container\">\r\n        <h1 className=\"form-title\">Admin Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\" htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              className=\"form-input\"\r\n              value={credentials.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className=\"form-input\"\r\n              value={credentials.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div style={{ color: 'red', marginTop: '1rem', textAlign: 'center' }}>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\" className=\"form-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}